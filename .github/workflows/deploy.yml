name: Deploy via Self-Hosted Runner

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set deployment config
        run: |
          BRANCH="$(echo $GITHUB_REF | sed 's|refs/heads/||')"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "INSTALL_CMD=npm install --omit=dev" >> $GITHUB_ENV

          if [ "$BRANCH" = "main" ]; then
            echo "PORT=4009" >> $GITHUB_ENV
            echo "DEPLOY_PATH=/www/wwwroot/reyhanjscom" >> $GITHUB_ENV
            echo "START_CMD=/www/server/nodejs/vhost/scripts/reyhanjs.sh" >> $GITHUB_ENV
            echo "CRON_FILE=/www/server/cron/de64faf8f2f95ba4fcd501088dd99c90" >> $GITHUB_ENV
          elif [ "$BRANCH" = "dev" ]; then
            echo "PORT=4008" >> $GITHUB_ENV
            echo "DEPLOY_PATH=/www/wwwroot/dev.reyhanjscom" >> $GITHUB_ENV
            echo "START_CMD=/www/server/nodejs/vhost/scripts/devreyhanjs.sh" >> $GITHUB_ENV
            echo "CRON_FILE=/www/server/cron/cf1d2706e322aa0a41ece4f4707e0427" >> $GITHUB_ENV
          else
            echo "Unsupported branch: $BRANCH. Exiting..."
            exit 0
          fi

      - name: Disable related cron during deployment
        run: |
          sudo crontab -l | grep -v "$CRON_FILE" | sudo crontab -

      - name: Kill port before starting (safe)
        run: |
          sudo fuser -k ${PORT}/tcp || true
          
      - name: Correct file permissions
        run: |
          cd "$DEPLOY_PATH"
          sudo find . ! -name '.user.ini' -exec chown www:www {} + || true
          sudo chmod -R 755 . || true

      - name: Sync project to deployment folder
        run: |
          cd $GITHUB_WORKSPACE
          cp .gitignore .rsync-exclude
          rsync -av --delete --exclude-from='.rsync-exclude' ./ "$DEPLOY_PATH" || true

      - name: Install dependencies
        run: |
          sudo -u www bash -c "cd '$DEPLOY_PATH' && $INSTALL_CMD && npm audit fix" || { echo "npm install failed"; exit 1; }

      - name: Remove .next cache
        run: |
          sudo -u www bash -c "cd '$DEPLOY_PATH' && rm -rf .next || true"

      - name: Build app
        run: |
          sudo -u www bash -c "cd '$DEPLOY_PATH' && npm run build" || { echo "npm run build failed"; exit 1; }

      - name: Restart service
        run: |
          sudo -u www bash -c "$START_CMD" || { echo "Service restart failed"; exit 1; }
      
      - name: Re-enable related cron after deployment after 10 seconds
        run: |
          sleep 10
          sudo crontab -l | grep -q "$CRON_FILE" || \
          (sudo crontab -l; echo "0 17 * * * $CRON_FILE >> $(dirname $CRON_FILE)/$(basename $CRON_FILE .sh).log 2>&1") | sudo crontab -
